{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"2D Retro Car Game","text":"<p>  Welcome to the documentation for the Endless Car Highway, a simple SFML-based project that is inspired by the mobile classic from Nokia.</p>"},{"location":"#setting-up-the-project-visual-studio-sfml","title":"\u2699\ufe0f Setting Up the Project (Visual Studio + SFML)","text":"<p>Follow these steps to build and run the simulator on Windows:</p> <ol> <li>Install Visual Studio 2022 (with C++ Desktop Development tools).  </li> <li>Download and install SFML 2.6+.  </li> <li>In your Visual Studio project:</li> <li>Add SFML include and library paths (<code>Include</code> and <code>Lib</code> folders).</li> <li>Link the required SFML libraries: <code>sfml-graphics</code>, <code>sfml-window</code>, <code>sfml-system</code>.</li> <li>Copy the SFML <code>bin</code> DLLs to your project\u2019s executable directory.</li> <li>Build and run the project.</li> </ol> <p>For a visual setup guide, watch this tutorial:  </p> <p></p>"},{"location":"#what-is-sfml","title":"\ud83d\udca1 What is SFML?","text":"<p>SFML (Simple and Fast Multimedia Library) is a C++ library for graphics, audio, and input handling. It allows developers to easily create 2D visualizations, games, and interactive tools.</p> <p>This project uses SFML to render smooth gameplay of a 2D, 4 lane Car game.</p> <p></p>"},{"location":"#learning-phase","title":"\ud83d\udcdd Learning Phase","text":"<p>For someone who had worked almost entirely in console before, there was much catching up to do. Aside from the basic creating a window, there was much more to learn such as: - creating sprites - tracking mouse/keyboard input - handling collisions - screen transitions</p> <p>And much more!</p> <p>Thankfully a YouTube playlist did make my journey smoother and easy to understand by explaining these concepts with proper code. Although I did only watch GAME 1 (videos 1 to 12), the rest of the playlist is just as enlightening if not more and can help to create even more diverse types of game swith SFML.</p> <p></p>"},{"location":"#project-idea-and-code-overview","title":"\ud83e\udde9 Project Idea and Code Overview","text":"<p>The project demonstrates how a basic game works from new game to pause menu to stting difficulty and even seeing high scores!</p>"},{"location":"#core-functionality","title":"Core Functionality","text":"<ul> <li>The user starts at the main menu.</li> <li>The choices are:</li> <li>New Game: Start a new game. </li> <li>High Scores: See top scores.</li> <li>Options: Set difficulty from easy, medium, hard.</li> <li>Controls: Help menu showcasing controls.</li> </ul>"},{"location":"#main-components","title":"Main Components","text":"<ul> <li>main.cpp: Runs the Game loop until user escapes or closes the window  </li> <li>support.h / support.cpp: Renders all the game screens, player car movement, spawning opposing cars, updating high scores, changing difficulty, etc.</li> </ul>"},{"location":"#demo-implementation","title":"\ud83e\uddea Demo Implementation","text":"<p>Here\u2019s a couple of videos of the running game:</p>    Sorry, your browser doesn't support embedded videos.     Sorry, your browser doesn't support embedded videos.  <p>This demo shows the real-time gameplay.</p>"},{"location":"#running-the-executable","title":"\ud83d\ude80 Running the Executable","text":"<ol> <li>Download the ZIP file (same name as repository) from the project\u2019s main directory.  </li> <li>Extract it into any folder.  </li> <li>Run the exe file:</li> </ol> <p>(Currently supports Windows only.)</p> <p>No installation or configuration needed \u2014 everything is self-contained.</p>"},{"location":"#concepts-learned-future-scope","title":"\ud83d\udcd8 Concepts Learned &amp; Future Scope","text":""},{"location":"#concepts-learned","title":"Concepts Learned","text":"<ul> <li>Working with SFML graphics and event handling  </li> <li>Structuring C++ OOP code for creating classes of cars/trucks/vans.  </li> <li>Implementing real-time dynamic gameplay and points and difficulty system. </li> <li>Debugging for out of bounds and wrong indexing errors and fixing them for smooth operations.  </li> </ul>"},{"location":"#future-scope","title":"Future Scope","text":"<ul> <li>\ud83e\uddf1 Improved UI  </li> <li>\ud83d\udc27 Cross-platform builds (Linux / macOS)  </li> <li>\u26a1 Support for more gameplay mechanics (invincibility token, more opposing vehicles,etc)  </li> <li>\ud83d\udcbe Option to save and load savestates (Continue option).</li> </ul>"},{"location":"#credits","title":"\ud83e\udded Credits","text":"<p>Developed by Once-1296 Licensed under the MIT License</p> <p>This documentation site is built with MkDocs Material, featuring dark/light mode, navigation sidebar, and full-text search.</p>"},{"location":"LICENSE/","title":"License","text":"<p>MIT License</p> <p>Copyright (c) 2025 Once-1296</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"}]}